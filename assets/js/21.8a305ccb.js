(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{372:function(t,e,a){"use strict";a.r(e);var s=a(43),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"短轮询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#短轮询"}},[t._v("#")]),t._v(" 短轮询")]),t._v(" "),a("ul",[a("li",[t._v("浏览器每隔一段时间向浏览器发送 http 请求，服务器端在收到请求后，不论是否有数据更新，都直接进行响应。")]),t._v(" "),a("li",[t._v("这种方式实现的即时通信，本质上还是浏览器发送请求，服务器接受请求的一个过程，通过让客户端不断的进行请求，使得客户端能够模拟实时地收到服务器端的数据的变化。")])]),t._v(" "),a("p",[t._v("缺点：\n这种方式由于需要不断的建立 http 连接，严重浪费了服务器端和客户端的资源。当用户增加时，服务器端的压力就会变大，这是很不合理的。")]),t._v(" "),a("h3",{attrs:{id:"长轮询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#长轮询"}},[t._v("#")]),t._v(" 长轮询")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("首先由客户端向服务器发起请求，当服务器收到客户端发来的请求后，服务器端不会直接进行响应，而是先将 这个请求挂起，然后判断服务器端数据是否有更新。")])]),t._v(" "),a("li",[a("p",[t._v("如果有更新，则进行响应，如果一直没有数据，则到达一定的时间限制才返回。客户端 JavaScript 响应处理函数会在处理完服务器返回的信息后，再次发出请求，重新建立连接。")])])]),t._v(" "),a("p",[t._v("优缺点：\n长轮询和短轮询比起来，它的优点是"),a("code",[t._v("明显减少了很多不必要的 http 请求次数")]),t._v("，相比之下节约了资源。\n但是，其连接挂起也会导致资源的浪费。")]),t._v(" "),a("h3",{attrs:{id:"websocket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" WebSocket")]),t._v(" "),a("ul",[a("li",[t._v("WebSocket 是 Html5 定义的一个新协议，与传统的 http 协议不同，该协议允许由服务器主动的向客户端推送信息。")])]),t._v(" "),a("ul",[a("li",[t._v("使用 WebSocket 协议的缺点是在服务器端的配置比较复杂。WebSocket 是一个全双工的协议，也就是通信双方是平等的，可以相互发送消息。")])])])}),[],!1,null,null,null);e.default=v.exports}}]);