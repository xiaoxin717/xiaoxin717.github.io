(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{361:function(e,v,_){"use strict";_.r(v);var t=_(43),n=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[e._v("强缓存失效后，浏览器在请求头中携带响应的缓存 Tag 来向服务器发送请求，服务器根据对应的 tag，来决定是否使用缓存。\n缓存分为两种，"),_("code",[e._v("Last-Modified")]),e._v(" 和 "),_("code",[e._v("ETag")]),e._v("。两者各有优势，并不存在谁对谁有绝对的优势，与上面所讲的强缓存两个 Tag 所不同。")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("Last-Modified\n这个字段表示的是"),_("code",[e._v("最后修改时间")]),e._v("。在浏览器第一次给服务器发送请求后，服务器会在响应头中加上这个字段。\n浏览器接收到后，"),_("code",[e._v("如果再次请求")]),e._v("，会在请求头中携带 "),_("code",[e._v("If-Modified-Since")]),e._v(" 字段，这个字段的值也就是服务器传来的最后修改时间。\n服务器拿到请求头中的 If-Modified-Since 的字段后，其实会和这个服务器中该资源的最后修改时间对比:")]),e._v(" "),_("p",[e._v("如果请求头中的这个值小于最后修改时间，说明是时候更新了。返回新的资源，跟常规的 HTTP 请求响应的流程一样。否则返回 304，告诉浏览器直接使用缓存。")])])]),e._v(" "),_("ul",[_("li",[_("p",[e._v("ETag")]),e._v(" "),_("p",[e._v("ETag 是服务器根据当前文件的内容，对文件生成唯一的标识，比如 MD5 算法，只要里面的内容有改动，这个值就会修改，服务器通过把响应头把该字段给浏览器。")]),e._v(" "),_("p",[e._v("浏览器接受到 ETag 值，会在下次请求的时候，将这个值作为「If-None-Match」这个字段的内容，发给服务器。")]),e._v(" "),_("p",[e._v("服务器接收到「If-None-Match」后，会跟服务器上该资源的「ETag」进行比对")]),e._v(" "),_("ul",[_("li",[e._v("如果两者一样的话，直接返回 304，告诉浏览器直接使用缓存")]),e._v(" "),_("li",[e._v("如果不一样的话，说明内容更新了，返回新的资源，跟常规的 HTTP 请求响应的流程一样")])])])])])}),[],!1,null,null,null);v.default=n.exports}}]);