(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{370:function(s,t,e){"use strict";e.r(t);var n=e(43),i=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("SSL 断开链接后如何恢复?")]),s._v(" "),e("ul",[e("li",[s._v("session ID")])]),s._v(" "),e("p",[s._v("使用 session ID 的方式，每一次的会话都有一个编号，当对话中断后，下一次重新连接时，只要客户端给出这个编号，服务器如果有这个编号的记录，那么双方就可以继续使用以前的秘钥，而不用重新生成一把。目前所有的浏览器都支持这一种方法。但是这种方法有一个缺点是，session ID 只能够存在一台服务器上，如果我们的请求通过负载平衡被转移到了其他的服务器上，那么就无法恢复对话。")]),s._v(" "),e("ul",[e("li",[s._v("session ticket")])]),s._v(" "),e("p",[s._v("另一种方式是 session ticket 的方式，session ticket 是服务器在上一次对话中发送给客户的，这个 ticket 是加密的，只有服务器能够解密，里面包含了本次会话的信息，比如对话秘钥和加密方法等。这样不管我们的请求是否转移到其他的服务器上，当服务器将 ticket 解密以后，就能够获取上次对话的信息，就不用重新生成对话秘钥了。")])])}),[],!1,null,null,null);t.default=i.exports}}]);